def parse_store_file(location):
    with open(location, 'rb') as f:
        # Skip first 30 bytes, as they contain metadata about the data structure
        byte = f.seek(30)
        malicious_exts = []

        # Read until we hit the end of the file
        while byte != b'':

            # Hacky way of only reading the ASCII strings
            try:
                byte = f.read(32)
                extension_uuid = byte.decode('ascii')
                malicious_exts.append(extension_uuid)
            # When we hit the non-ascii characters, break the execution
            except:
                break
    return malicious_exts 

def main():
    malicious_extensions = parse_store_file('./ChromeExtMalware.store')
    
    # Write the parsed extension_uuids to an output file
    # TODO: Write it as a "CSV", not just plaintext
    with open('chrome_extensions_iocs.txt', 'a+') as parsed_output:
        for extension in malicious_extensions:
            print(f'Writing {extension}')
            parsed_output.write(extension+'\n')

if __name__ == "__main__":
    main()